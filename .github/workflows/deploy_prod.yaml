name: Deploy URRV-BOT for prod

on:
  push:
    tags:
      - '*'

jobs:
  deploy_prod:
    name: Deploy URRV-BOT on prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version from tag
        run: |
          echo "TAG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Forming docker-compose file
        env:
          DISCORD_ATO_NEWS_CHANNEL_ID: ${{ vars.DISCORD_ATO_NEWS_CHANNEL_ID }}
          DISCORD_POSITION_ANNOUNCEMENT_CHANNEL_ID: ${{ vars.DISCORD_POSITION_ANNOUNCEMENT_CHANNEL_ID }}
          DISCORD_WELCOME_CHANNEL_ID: ${{ vars.DISCORD_WELCOME_CHANNEL_ID }}
        run: |
          sed "s/\${VERSION}/$TAG_VERSION/g" \
            -e "s/\${DISCORD_ATO_NEWS_CHANNEL_ID}/$DISCORD_ATO_NEWS_CHANNEL_ID/g" \
            -e "s/\${DISCORD_POSITION_ANNOUNCEMENT_CHANNEL_ID}/$DISCORD_POSITION_ANNOUNCEMENT_CHANNEL_ID/g" \
            -e "s/\${DISCORD_TOKEN}/$DISCORD_TOKEN/g" \
            -e "s/\${DISCORD_WELCOME_CHANNEL_ID}/$DISCORD_WELCOME_CHANNEL_ID/g" \
            docker-compose.template.yaml > docker-compose.yaml

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull and tag images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/rostov-bot:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/rostov-bot:latest ${{ secrets.DOCKER_USERNAME }}/rostov-bot:$TAG_VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/rostov-bot:$TAG_VERSION
          docker pull ${{ secrets.DOCKER_USERNAME }}/metar-bot:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/metar-bot:latest ${{ secrets.DOCKER_USERNAME }}/metar-bot:$TAG_VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/metar-bot:$TAG_VERSION
          docker pull ${{ secrets.DOCKER_USERNAME }}/atc-bot:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/atc-bot:latest ${{ secrets.DOCKER_USERNAME }}/atc-bot:$TAG_VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/atc-bot:$TAG_VERSION

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Copy docker-compose.yaml to server
        run: |
          scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} ./docker-compose.yaml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/srv/urrv-bot

      - name: SSH to server and deploy
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << EOF
            cd /srv/urrv-bot
            docker pull ${{ secrets.DOCKER_USERNAME }}/atc-bot:$TAG_VERSION
            docker pull ${{ secrets.DOCKER_USERNAME }}/metar-bot:$TAG_VERSION
            docker pull ${{ secrets.DOCKER_USERNAME }}/rostov-bot:$TAG_VERSION
            docker-compose down
            docker-compose up -d
            docker system prune -f
            docker image prune -a -f
          EOF
