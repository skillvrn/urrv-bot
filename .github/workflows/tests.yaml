name: Lint, Detect, Test Build

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:
  check-changes:
    name: Check changed files
    runs-on: ubuntu-latest
    outputs:
      src-changed: ${{ steps.filter.outputs.src }}
      rostov-changed: ${{ steps.filter.outputs.rostov }}
      metar-changed: ${{ steps.filter.outputs.metar }}
      atc-changed: ${{ steps.filter.outputs.atc }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - 'src/**'
            rostov:
              - 'src/rostov/**'
            metar:
              - 'src/metar/**'
            atc:
              - 'src/atc/**'

  lint:
    name: Python lint URRV-BOT
    if: github.ref != 'refs/heads/main' && github.event_name == 'push' && needs.check-changes.outputs.src-changed == 'true'
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: check-changes
    env:
      PYTHON_VERSION: '3.13'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy discord.py aiohttp beautifulsoup4 requests
          pip install types-beautifulsoup4 types-requests

          
      - name: Run flake8 (style guide enforcement)
        run: flake8 . --count --show-source --statistics
        
      - name: Run black (code formatting check)
        run: black --check --diff .
        
      - name: Run mypy (static type checking)
        run: mypy .

  detect-secrets:
    name: Scanning for secrets in code
    if: github.ref != 'refs/heads/main' && github.event_name == 'push' && needs.check-changes.outputs.src-changed == 'true'
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2

  test-build-docker:
    name: Testing build docker
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [lint, detect-secrets, check-changes]
    steps:
      - uses: actions/checkout@v4

      - name: Build rostov-bot image
        if: needs.check-changes.outputs.rostov-changed == 'true'
        working-directory: ./src/rostov
        run: |
          docker build -t rostov-bot:latest .
      
      - name: Build metar-bot image
        if: needs.check-changes.outputs.metar-changed == 'true'
        working-directory: ./src/metar
        run: |
          docker build -t metar-bot:latest .
      
      - name: Build atc-bot image
        if: needs.check-changes.outputs.atc-changed == 'true'
        working-directory: ./src/atc
        run: |
          docker build -t atc-bot:latest .
      
      # - name: Scan Docker image rostov-bot for vulnerabilities
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: rostov-bot:latest
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'

      # - name: Scan Docker image metar-bot for vulnerabilities
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: metar-bot:latest
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'

      # - name: Scan Docker image atc-bot for vulnerabilities
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: atc-bot:latest
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'
