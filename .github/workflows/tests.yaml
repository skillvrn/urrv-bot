name: Lint, Detect, Test Build

on:
  push:
    branches-ignore:
      - main

jobs:
  lint:
    name: Python lint URRV-BOT
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      PYTHON_VERSION: '3.13'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black mypy
          
      - name: Run flake8 (style guide enforcement)
        run: flake8 . --count --show-source --statistics
        
      - name: Run black (code formatting check)
        run: black --check --diff .
        
      - name: Run mypy (static type checking)
        run: mypy .

  detect-secrets:
    name: Scanning for secrets in code
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2

  test-build-docker:
    name: Testing build docker
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [lint, detect-secrets]
    steps:
      - uses: actions/checkout@v4

      - name: Build rostov-bot image
        working-directory: ./rostov-bot
        run: |
          docker build -t rostov-bot:latest .
      
      - name: Build metar-bot image
        working-directory: ./metar-bot
        run: |
          docker build -t metar-bot:latest .
      
      # - name: Scan Docker image rostov-bot for vulnerabilities
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: rostov-bot:latest
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'

      # - name: Scan Docker image metar-bot for vulnerabilities
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: metar-bot:latest
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'
