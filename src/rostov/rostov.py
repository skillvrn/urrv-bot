import os
import re
import asyncio
import datetime
import math
import discord
from discord.ext import commands

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BOT_PREFIX = "/"
WELCOME_CHANNEL_ID = int(os.getenv('DISCORD_WELCOME_CHANNEL_ID'))
ATO_NEWS_CHANNEL_ID = int(os.getenv('DISCORD_ATO_NEWS_CHANNEL_ID'))
ANNOUNCEMENT_EMOJI = "üì¢"
ROLES_TO_MENTION = ["@–ö—É—Ä—Å–∞–Ω—Ç—ã"]
EXERCISE_EMOJIS = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£"]
BOT_COLOR = discord.Color.blue()
FLIGHT_ANNOUNCE_IMAGE_URL = (
    "https://media.discordapp.net/"
    "attachments/1274246245967200313/"
    "1361762541436407899/image.png?"
    "ex=67ffefb2&is=67fe9e32&hm="
    "b1152df005c0aa0ca39c0e38bb382e583188be746aa4ebae"
    "2186ea20ad6af777&=&format=webp&quality=lossless"
)

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ ---
BOT_TOKEN = os.getenv("DISCORD_TOKEN")
if not BOT_TOKEN:
    raise ValueError(
        "DISCORD_TOKEN not found in environment variables. Please set it.")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
bot = commands.Bot(command_prefix=BOT_PREFIX, intents=intents)


# --- –°–æ–±—ã—Ç–∏—è ---
@bot.event
async def on_ready():
    """Called when the bot is connected to Discord."""
    print(f"–ë–æ—Ç {bot.user.name} –ø–æ–¥–∫–ª—é—á–µ–Ω!")
    activity = discord.Activity(
        type=discord.ActivityType.watching,
        name="–∑–∞ —Å–µ—Ä–≤–µ—Ä–æ–º")
    await bot.change_presence(activity=activity)


@bot.event
async def on_member_join(member: discord.Member):
    """Welcomes new members to the server."""
    channel = bot.get_channel(WELCOME_CHANNEL_ID)
    if channel:
        embed = discord.Embed(
            title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
            description=(
                f"–ü—Ä–∏–≤–µ—Ç, {member.mention}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä "
                f"{member.guild.name}! –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ "
                f"–ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª–∏."
            ),
            color=BOT_COLOR,
        )
        embed.set_thumbnail(url=member.avatar.url)
        await channel.send(embed=embed)
    else:
        print(
            f"WARNING: Welcome channel (ID: {WELCOME_CHANNEL_ID}) not found.")


# --- –ö–æ–º–∞–Ω–¥—ã ---
@bot.command(name="hello", description="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def hello(ctx: commands.Context):
    """Greets the user with a welcoming message."""
    embed = discord.Embed(
        title="‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ‚ú®",
        description=(
            f"–ü—Ä–∏–≤–µ—Ç, {
                ctx.author.mention}! **–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ –±–æ—Ä—Ç—É!** üöÄ"
        ),
        color=discord.Color.from_rgb(75, 200, 100),
    )
    embed.set_thumbnail(
        url=(
            ctx.author.avatar.url
            if ctx.author.avatar
            else ctx.author.default_avatar.url
        )
    )
    embed.add_field(
        name="**–ö–∞–∫ –æ—Å–≤–æ–∏—Ç—å—Å—è?**",
        value="–ü—Ä–æ—á—Ç–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª–∏!",
        inline=False,
    )
    embed.set_footer(
        text="–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è!",
        icon_url=(
            bot.user.avatar.url
            if bot.user.avatar
            else bot.user.default_avatar.url
        ),
    )
    await ctx.send(embed=embed)


@bot.command(name="serverinfo", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ")
async def serverinfo(ctx: commands.Context):
    """Displays information about the server."""
    guild = ctx.guild
    embed = discord.Embed(
        title=f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ: {guild.name} üìä",
        description=(
            f"–û–ø–∏—Å–∞–Ω–∏–µ: {guild.description or '**–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç**'}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: **{guild.member_count}**\n"
            f"–°–æ–∑–¥–∞–Ω: {guild.created_at.strftime('%d.%m.%Y %H:%M:%S')}"
        ),
        color=discord.Color.from_rgb(102, 178, 255),
    )
    embed.set_thumbnail(url=guild.icon.url if guild.icon else None)
    await ctx.send(embed=embed)


@bot.command(name="rules", description="–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞")
async def rules(ctx: commands.Context):
    """Displays the server rules."""
    embed = discord.Embed(
        title="üìú –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ üìú",
        description=(
            "1. **–ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã –∏ —É–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. üôè**\n"
            "2. **–ù–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ —Å–ø–∞–º–∞ –∏ —Ñ–ª—É–¥–∞ –≤ —á–∞—Ç–µ. üö´**\n"
            "3. **–ò–∑–±–µ–≥–∞–π—Ç–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è. üò†**\n"
            "4. **–°–æ–±–ª—é–¥–∞–π—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∫–∞–Ω–∞–ª–æ–≤. üí¨**\n"
            "5. **–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å —É–∫–∞–∑–∞–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. üëÆ**"
        ),
        color=discord.Color.from_rgb(255, 153, 51),
    )
    embed.set_footer(
        text="–°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª-–∑–∞–ª–æ–≥ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è!",
        icon_url=(
            bot.user.avatar.url
            if bot.user.avatar
            else bot.user.default_avatar.url),
    )
    await ctx.send(embed=embed)


@bot.command(
    name="clear",
    description="–û—á–∏—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π.",
)
@commands.has_permissions(manage_messages=True)
async def clear(ctx: commands.Context, amount: int):
    """Deletes a specified number of messages."""
    if 0 < amount <= 100:
        try:
            await ctx.channel.purge(limit=amount + 1)
            embed = discord.Embed(
                description=(
                    f"**{amount} —Å–æ–æ–±—â–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã. ‚úÖ –ß–∏—Å—Ç–æ—Ç–∞ - "
                    "–∑–∞–ª–æ–≥ –ø–æ—Ä—è–¥–∫–∞!**"
                ),
                color=discord.Color.from_rgb(153, 255, 153),
            )
            await ctx.send(embed=embed, delete_after=3)
        except discord.errors.Forbidden:
            await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤.")
        except Exception as e:
            await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
    else:
        embed = discord.Embed(
            description=(
                "**‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ "
                "–¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100. ‚ö†Ô∏è**"
            ),
            color=discord.Color.from_rgb(255, 153, 153),
        )
        await ctx.send(embed=embed)


@bot.command(name="wind_conversion",
             description="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —É–∑–ª—ã –≤ –∫–∏–ª–æ–º–µ—Ç—Ä—ã –≤ —á–∞—Å.")
async def wind_conversion(ctx: commands.Context, knots: float):
    """Converts knots to kilometers per hour."""
    kmh = knots * 1.852
    embed = discord.Embed(
        title="üí® –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ—Ç—Ä–∞ üí®",
        description=f"{knots} —É–∑–ª–æ–≤ = **{kmh:.2f}** –∫–º/—á",
        color=discord.Color.from_rgb(153, 204, 255),
    )
    embed.set_footer(
        text="–ü–æ–º–Ω–∏—Ç–µ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ—Ç–æ–≤!",
        icon_url=(
            bot.user.avatar.url
            if bot.user.avatar
            else bot.user.default_avatar.url
        ),
    )
    await ctx.send(embed=embed)


@bot.command(name="wind_calculate",
             help="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–¥–æ–ª—å–Ω—ã–π –∏ –±–æ–∫–æ–≤–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤–µ—Ç—Ä–∞.")
async def wind_calculate(
        ctx: commands.Context,
        wind_metar: str,
        runway_heading: int):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–¥–æ–ª—å–Ω—ã–π –∏ –±–æ–∫–æ–≤–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤–µ—Ç—Ä–∞.

    Args:
        ctx: The command context.
        wind_metar: –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –∏–∑ METAR
                    (–Ω–∞–ø—Ä–∏–º–µ—Ä, "09005MPS").
        runway_heading: –ö—É—Ä—Å –ø–æ–ª–æ—Å—ã (–≤ –≥—Ä–∞–¥—É—Å–∞—Ö).
    """
    try:
        wind_direction = int(wind_metar[:3])
        wind_speed = int(wind_metar[3:5])

        wind_direction_rad = math.radians(wind_direction)
        runway_heading_rad = math.radians(runway_heading)

        angle_difference = wind_direction_rad - runway_heading_rad

        headwind_component = round(wind_speed * math.cos(angle_difference), 1)
        crosswind_component = round(wind_speed * math.sin(angle_difference), 1)

        embed = discord.Embed(
            title="üí® –†–∞—Å—á–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤–µ—Ç—Ä–∞ üí®",
            color=BOT_COLOR,
        )
        embed.add_field(name="–í–µ—Ç–µ—Ä –∏–∑ METAR", value=wind_metar, inline=False)
        embed.add_field(
            name="–ö—É—Ä—Å –ø–æ–ª–æ—Å—ã",
            value=f"{runway_heading}¬∞",
            inline=False)
        embed.add_field(
            name="–ü—Ä–æ–¥–æ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç",
            value=f"{headwind_component} (–ø–æ–ø—É—Ç–Ω—ã–π/–≤—Å—Ç—Ä–µ—á–Ω—ã–π)",
            inline=False,
        )
        embed.add_field(
            name="–ë–æ–∫–æ–≤–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç",
            value=f"{crosswind_component}",
            inline=False)

        await ctx.send(embed=embed)

    except ValueError:
        await ctx.send(
            "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. - "
            "—á–∏—Å–ª–æ –æ—Ç 000 –¥–æ 360, –∞ –∫—É—Ä—Å –ø–æ–ª–æ—Å—ã - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ."
        )
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ: {e}")


@bot.command(name="say",
             help="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.")
@commands.has_permissions(administrator=True)
async def say(
        ctx: commands.Context,
        channel: discord.TextChannel,
        *,
        message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã.
        channel: –ö–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        embed = discord.Embed(
            description=message,
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        embed.set_footer(
            text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author.name}",
            icon_url=ctx.author.avatar.url,
        )
        await channel.send(embed=embed)
        await ctx.message.delete()
    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@bot.command(name="announce",
             help="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.")
@commands.has_permissions(administrator=True)
async def announce(
    ctx: commands.Context, channel: discord.TextChannel, *, message: str
):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã.
        channel: –ö–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    try:
        embed = discord.Embed(
            title=f"{ANNOUNCEMENT_EMOJI} –û–±—ä—è–≤–ª–µ–Ω–∏–µ",
            description=message,
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        embed.set_footer(text="–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞")

        await channel.send(embed=embed)

        await ctx.message.add_reaction("‚úÖ")

        await ctx.message.delete()

    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@bot.command(name="flight_announce",
             help="–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–± —É—á–µ–±–Ω—ã—Ö –ø–æ–ª–µ—Ç–∞—Ö —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏.")
@commands.has_permissions(administrator=True)
async def flight_announce(
        ctx: commands.Context,
        flight_date: str,
        flight_time: str):
    """Creates a flight announcement with reactions."""
    channel = bot.get_channel(ATO_NEWS_CHANNEL_ID)
    if not channel:
        await ctx.send("–û—à–∏–±–∫–∞: –ö–∞–Ω–∞–ª #ato-news –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    try:
        embed = discord.Embed(
            title="‚úàÔ∏è –£—á–µ–±–Ω—ã–µ –ø–æ–ª–µ—Ç—ã üöÄ",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        embed.add_field(name="üìÖ –î–∞—Ç–∞", value=flight_date, inline=False)
        embed.add_field(
            name="üïí –í—Ä–µ–º—è",
            value=f"{flight_time} UTC",
            inline=False)
        embed.add_field(name="üìç –ú–µ—Å—Ç–æ", value="URMM IVAO", inline=False)
        embed.add_field(
            name="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏", value=" ".join(ROLES_TO_MENTION), inline=False
        )
        embed.add_field(
            name="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            value=(
                "–°–æ–æ–±—â–∏—Ç–µ –æ —Å–≤–æ–µ–º —É—á–∞—Å—Ç–∏–∏, –Ω–∞–∂–∞–≤ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é —Å "
                "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è. ‚¨áÔ∏è"
            ),
            inline=False,
        )
        embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é, —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –æ–± —É—á–∞—Å—Ç–∏–∏")
        embed.set_image(url=FLIGHT_ANNOUNCE_IMAGE_URL)

        message = await channel.send(embed=embed)
        for emoji in EXERCISE_EMOJIS:
            await message.add_reaction(emoji)
        await ctx.message.delete()

    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {e}")


# --- –ú–æ–¥–µ—Ä–∞—Ü–∏—è ---
@bot.command(name="kick", help="–í—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞.")
@commands.has_permissions(kick_members=True)
async def kick(ctx: commands.Context, member: discord.Member, *, reason=None):
    """Kicks a member from the server."""
    try:
        await member.kick(reason=reason)
        embed = discord.Embed(
            title="–í—ã–≥–Ω–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫",
            description=f"–£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –±—ã–ª –≤—ã–≥–Ω–∞–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞.",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        if reason:
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        embed.set_footer(
            text=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.name}",
            icon_url=ctx.author.avatar.url,
        )
        await ctx.send(embed=embed)

    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–≥–æ–Ω–∞ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
    except discord.errors.NotFound:
        await ctx.send("–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ: {e}")


@bot.command(name="ban", help="–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
@commands.has_permissions(ban_members=True)
async def ban(ctx: commands.Context, member: discord.Member, *, reason=None):
    """Bans a member from the server."""
    try:
        await member.ban(reason=reason)
        embed = discord.Embed(
            title="–ó–∞–±–∞–Ω–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫",
            description=f"–£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞.",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        if reason:
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        embed.set_footer(
            text=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.name}",
            icon_url=ctx.author.avatar.url,
        )
        await ctx.send(embed=embed)
    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
    except discord.errors.NotFound:
        await ctx.send("–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ: {e}")


@bot.command(name="unban", help="–†–∞–∑–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
@commands.has_permissions(ban_members=True)
async def unban(ctx: commands.Context, user_id: int, *, reason=None):
    """Unbans a user from the server."""
    try:
        user = discord.Object(id=user_id)
        await ctx.guild.unban(user, reason=reason)
        embed = discord.Embed(
            title="–†–∞–∑–±–∞–Ω–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫",
            description=f"–£—á–∞—Å—Ç–Ω–∏–∫ —Å ID {user_id} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        if reason:
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        embed.set_footer(
            text=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.name}",
            icon_url=ctx.author.avatar.url,
        )
        await ctx.send(embed=embed)
    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
    except discord.errors.NotFound:
        await ctx.send("–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–∞–Ω–µ: {e}")


@bot.command(name="mute", help="–ó–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
@commands.has_permissions(manage_roles=True)
async def mute(
        ctx: commands.Context,
        member: discord.Member,
        duration: str,
        *,
        reason=None):
    """Mutes a member for a specified duration."""
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")
    if not muted_role:
        await ctx.send(
            "–†–æ–ª—å 'Muted' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ä–æ–ª—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "
            "'Muted' –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞."
        )
        return

    seconds = parse_duration(duration)
    if seconds is None:
        await ctx.send(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, '1m', "
            "'5h', '1d'."
        )
        return

    try:
        await member.add_role(muted_role, reason=reason)
        embed = discord.Embed(
            title="–ó–∞–º—É—á–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫",
            description=f"–£—á–∞—Å—Ç–Ω–∏–∫ {
                member.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration}.",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        if reason:
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        embed.set_footer(
            text=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.name}",
            icon_url=ctx.author.avatar.url,
        )
        await ctx.send(embed=embed)

        await asyncio.sleep(seconds)

        await member.remove_role(muted_role, reason="–í—Ä–µ–º—è –º—É—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ")
        embed = discord.Embed(
            title="–í—Ä–µ–º—è –º—É—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ",
            description=f"–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫ –º—É—Ç–∞.",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        await ctx.send(embed=embed)
    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ: {e}")


@bot.command(name="unmute", help="–°–Ω—è—Ç—å –º—É—Ç —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
@commands.has_permissions(manage_roles=True)
async def unmute(
        ctx: commands.Context,
        member: discord.Member,
        *,
        reason=None):
    """Removes the mute from a member."""
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")
    if not muted_role:
        await ctx.send(
            "–†–æ–ª—å 'Muted' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ä–æ–ª—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "
            "'Muted' –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞."
        )
        return

    try:
        await member.remove_role(muted_role, reason=reason)
        embed = discord.Embed(
            title="–°–Ω—è—Ç –º—É—Ç",
            description=f"–° —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –±—ã–ª —Å–Ω—è—Ç –º—É—Ç.",
            color=BOT_COLOR,
            timestamp=datetime.datetime.now(datetime.timezone.utc),
        )
        if reason:
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        embed.set_footer(
            text=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {ctx.author.name}",
            icon_url=ctx.author.avatar.url,
        )
        await ctx.send(embed=embed)
    except discord.errors.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞: {e}")


@bot.event
async def on_message(message: discord.Message):
    """Handles messages, important for command processing."""
    if message.author == bot.user:
        return
    await bot.process_commands(message)


# --- Helper functions ---
def parse_duration(duration: str) -> int | None:
    """Parses a duration string (e.g., '1m', '5h') into seconds."""
    units = {"s": 1, "m": 60, "h": 3600, "d": 86400}
    match = re.match(r"^(\d+)([smhd])$", duration)
    if match:
        amount, unit = int(match.group(1)), match.group(2)
        return amount * units[unit]
    return None


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
bot.run(BOT_TOKEN)
